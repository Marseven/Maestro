<?php
namespace App\Controller\Admin;

use App\Controller\AppController;
use Cake\ORM\TableRegistry;
use Cake\I18n\FrozenTime;

class EtudeController extends AppController
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->Auth->allow(['index']);
        $user = $this->Auth->user();
        if($user) {
            $user['confirmed_at'] = new FrozenTime($user['confirmed_at']);
            $user['reset_at'] = new FrozenTime($user['reset_at']);
            $this->set('user', $user);
        }else{
            $this->redirect(['controller' => 'Users','action' => 'logout']);
        }


    }

    public function index(){
        return $this->render('index', 'Admin/default');
    }

    public function formation(){
        $formationsTable = TableRegistry::get('Formations');
        if(isset($this->request->params['?']['formation'])){
            $id = (int)$this->request->params['?']['formation'];
            $formation_edit = $formationsTable->get($id);
            if (!$formation_edit) {
                $this->Flash->error('Ce profil n\'exite pas');
                $this->redirect(['controller' => 'Users','action' => 'logout']);
            }
            $this->set('formation_edit', $formation_edit);
        }
        if ($this->request->is(array('post','put'))) {
            $formation = $formationsTable->newEntity($this->request->getData());
            if(isset($formation_edit)  && !isset($this->request->getData()['new'])){
                $formation->id = $formation_edit->id;
            }
            if ($formationsTable->save($formation)) {
                if(isset($formation_edit)  && !isset($this->request->getData()['new'])){
                    $this->Flash->success('Formation Modifiée avec succès !');
                }else{
                    $this->Flash->success('Formation Ajoutée avec succès !');
                }
            }else{
                $this->Flash->set('Certains champs ont été mal saisis', ['element' => 'error']);
            }
        }
        $formations = $formationsTable->find()->all();
        $this->set('formations', $formations);
        return $this->render('formation', 'Admin/default');
    }

    public function examenAcademique(){
        $examenAcademiqueTable = TableRegistry::get('Examen_academiques');
        if(isset($this->request->params['?']['examen'])){
            $id = (int)$this->request->params['?']['examen'];
            $examen_edit = $examenAcademiqueTable->get($id);
            if (!$examen_edit) {
                $this->Flash->error('Ce profil n\'exite pas');
                $this->redirect(['action' => 'logout']);
            }
            $this->set('examen_edit', $examen_edit);
        }
        if ($this->request->is(array('post','put'))) {
            $examen = $examenAcademiqueTable->newEntity($this->request->getData());
            if(isset($examen_edit)  && !isset($this->request->getData()['new'])){
                $examen->id = $examen_edit->id;
            }
            if ($examenAcademiqueTable->save($examen)) {
                if(isset($examen_edit)  && !isset($this->request->getData()['new'])){
                    $this->Flash->success('Examen académique Modifié avec succès !');
                }else{
                    $this->Flash->success('Examen académique Ajouté avec succès !');
                }
            }else{
                $this->Flash->set('Certains champs ont été mal saisis', ['element' => 'error']);
            }
        }
        $examens = $examenAcademiqueTable->find()->all();
        $this->set('examens', $examens);
        return $this->render('examen_academique', 'Admin/default');
    }

    public function etudePersonnel(){
        $etudePersonnelTable = TableRegistry::get('Etude_personnels');
        if(isset($this->request->params['?']['etudep'])){
            $id = (int)$this->request->params['?']['etudep'];
            $etude_edit = $etudePersonnelTable->get($id);
            if (!$etude_edit) {
                $this->Flash->error('Ce profil n\'exite pas');
                $this->redirect(['action' => 'logout']);
            }
            $this->set('etude_edit', $etude_edit);
        }
        if ($this->request->is(array('post','put'))) {
            $etude = $etudePersonnelTable->newEntity($this->request->getData());
            if(isset($etude_edit)  && !isset($this->request->getData()['new'])){
                $etude->id = $etude_edit->id;
            }
            if ($etudePersonnelTable->save($etude)) {
                if(isset($etude_edit)  && !isset($this->request->getData()['new'])){
                    $this->Flash->success('Etude personnel Modifié avec succès !');
                }else{
                    $this->Flash->success('Etude personnel Ajouté avec succès !');
                }
            }else{
                $this->Flash->set('Certains champs ont été mal saisis', ['element' => 'error']);
            }
        }
        $etudes = $etudePersonnelTable->find()->all();
        $this->set('etudes', $etudes);
        return $this->render('etude_personnel', 'Admin/default');
    }

    public function delete(){
        $formationsTable = TableRegistry::get('Formations');
        $etudePersonnelTable = TableRegistry::get('Etude_personnels');
        $examenAcademiqueTable = TableRegistry::get('Examen_academiques');
        if(empty($this->request->params['?'])){
            $this->Flash->error('Information manquante.');
            $this->redirect(['controller' => 'Users','action' => 'logout']);
        }else{
            if(isset($this->request->params['?']['formation'])){
                $id = (int)$this->request->params['?']['formation'];
                $formation = $formationsTable->find()
                    ->where(
                        [
                            'id' => $id,
                        ]
                    )
                    ->all();

                if (!$formation->first()) {
                    $this->Flash->error('Cette formation n\'existe pas.');
                    $this->redirect(['controller' => 'Users', 'action' => 'logout']);
                }else{
                    $formationsTable->delete($formation->first());
                    $this->Flash->set('Formation supprimée avec succès.', ['element' => 'success']);
                    $this->redirect(['controller' => 'Etude','action' => 'formation']);
                }
            }elseif(isset($this->request->params['?']['etudep'])){
                $id = (int)$this->request->params['?']['etudep'];
                $etude = $etudePersonnelTable->find()
                    ->where(
                        [
                            'id' => $id,
                        ]
                    )
                    ->all();

                if (!$etude->first()) {
                    $this->Flash->error('Cette étude personnel n\'existe pas.');
                    $this->redirect(['controller' => 'Users', 'action' => 'logout']);
                }else{
                    $etudePersonnelTable->delete($etude->first());
                    $this->Flash->set('Etude personnel supprimée avec succès.', ['element' => 'success']);
                    $this->redirect(['controller' => 'Etude','action' => 'etudePersonnel']);
                }
            }elseif(isset($this->request->params['?']['examen'])){
                $id = (int)$this->request->params['?']['examen'];
                $examen = $examenAcademiqueTable->find()
                    ->where(
                        [
                            'id' => $id,
                        ]
                    )
                    ->all();

                if (!$examen->first()) {
                    $this->Flash->error('Cet examen académique n\'existe pas.');
                    $this->redirect(['controller' => 'Users', 'action' => 'logout']);
                }else{
                    $examenAcademiqueTable->delete($examen->first());
                    $this->Flash->set('Examen académique supprimé avec succès.', ['element' => 'success']);
                    $this->redirect(['controller' => 'Etude','action' => 'examenAcademique']);
                }
            }
        }

    }
}