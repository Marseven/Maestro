<?php
namespace App\Controller\Admin;

use App\Controller\AppController;
use Cake\ORM\TableRegistry;
use Cake\I18n\FrozenTime;


class FinanceController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->Auth->allow(['index']);
        $user = $this->Auth->user();
        if($user){
            $user['confirmed_at'] = new FrozenTime($user['confirmed_at']);
            $user['reset_at'] = new FrozenTime($user['reset_at']);
            $this->set('user', $user);
        }else{
            $this->redirect(['controller' => 'Users','action' => 'logout']);
        }

    }

    public function index(){
        return $this->render('index', 'Admin/default');
    }

    public function actif(){
        $actifsTable = TableRegistry::get('Actifs');
        if(isset($this->request->params['?']['actif'])){
            $id = (int)$this->request->params['?']['actif'];
            $actif_edit = $actifsTable->get($id);
            if (!$actif_edit) {
                $this->Flash->error('Cet actif n\'exite pas');
                $this->redirect(['controller' => 'Users','action' => 'logout']);
            }
            $this->set('formation_edit', $actif_edit);
        }
        if ($this->request->is(array('post','put'))) {
            $actif = $actifsTable->newEntity($this->request->getData());
            if(isset($actif_edit)  && !isset($this->request->getData()['new'])){
                $actif->id = $actif_edit->id;
            }
            if ($actifsTable->save($actif)) {
                if(isset($actif_edit)  && !isset($this->request->getData()['new'])){
                    $this->Flash->success('Actif Modifiée avec succès !');
                }else{
                    $this->Flash->success('Actif Ajoutée avec succès !');
                }
            }else{
                $this->Flash->set('Certains champs ont été mal saisis', ['element' => 'error']);
            }
        }
        $actifs = $actifsTable->find()->all();
        $total_actif = 0;
        foreach($actifs as $actif){
            $total_actif += $actif->valeur;
        }
        $this->set('actifs', $actifs);
        $this->set('total_actif', $total_actif);
        return $this->render('actif', 'Admin/default');
    }

    public function passif(){
        $passifsTable = TableRegistry::get('Passifs');
        if(isset($this->request->params['?']['passif'])){
            $id = (int)$this->request->params['?']['passif'];
            $passif_edit = $passifsTable->get($id);
            if (!$passif_edit) {
                $this->Flash->error('Ce Passif n\'exite pas');
                $this->redirect(['controller' => 'Users','action' => 'logout']);
            }
            $this->set('formation_edit', $passif_edit);
        }
        if ($this->request->is(array('post','put'))) {
            $passif = $passifsTable->newEntity($this->request->getData());
            if(isset($passif_edit)  && !isset($this->request->getData()['new'])){
                $passif->id = $passif_edit->id;
            }
            if ($passifsTable->save($passif)) {
                if(isset($passif_edit)  && !isset($this->request->getData()['new'])){
                    $this->Flash->success('Passif Modifiée avec succès !');
                }else{
                    $this->Flash->success('Passif Ajoutée avec succès !');
                }
            }else{
                $this->Flash->set('Certains champs ont été mal saisis', ['element' => 'error']);
            }
        }
        $passifs = $passifsTable->find()->all();
        $total_passif = 0;
        foreach($passifs as $passif){
            $total_passif += $passif->valeur;
        }
        $this->set('passifs', $passifs);
        $this->set('total_passif', $total_passif);
        return $this->render('passif', 'Admin/default');
    }

    public function stats(){
        $actifsTable = TableRegistry::get('Actifs');
        $passifsTable = TableRegistry::get('Passifs');

        return $this->render('stats', 'Admin/default');
    }

    public function delete(){
        $actifsTable = TableRegistry::get('Actifs');
        $passifsTable = TableRegistry::get('Passifs');
        if(empty($this->request->params['?'])){
            $this->Flash->error('Information manquante.');
            $this->redirect(['controller' => 'Users','action' => 'logout']);
        }else{
            if(isset($this->request->params['?']['actif'])){
                $id = (int)$this->request->params['?']['actif'];
                $actif = $actifsTable->find()
                    ->where(
                        [
                            'id' => $id,
                        ]
                    )
                    ->all();

                if (!$actif->first()) {
                    $this->Flash->error('Cet Actif n\'existe pas.');
                    $this->redirect(['controller' => 'Users', 'action' => 'logout']);
                }else{
                    $actifsTable->delete($actif->first());
                    $this->Flash->set('Actif supprimée avec succès.', ['element' => 'success']);
                    $this->redirect(['controller' => 'Etude','action' => 'formation']);
                }
            }elseif(isset($this->request->params['?']['passif'])){
                $id = (int)$this->request->params['?']['passif'];
                $passif = $passifsTable->find()
                    ->where(
                        [
                            'id' => $id,
                        ]
                    )
                    ->all();

                if (!$passif->first()) {
                    $this->Flash->error('Ce passif n\'existe pas.');
                    $this->redirect(['controller' => 'Users', 'action' => 'logout']);
                }else{
                    $passifsTable->delete($passif->first());
                    $this->Flash->set('Passif supprimé avec succès.', ['element' => 'success']);
                    $this->redirect(['controller' => 'Etude','action' => 'etudePersonnel']);
                }
            }
        }

    }
}
