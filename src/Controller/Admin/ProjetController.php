<?php
namespace App\Controller\Admin;

use App\Controller\AppController;
use Cake\ORM\TableRegistry;
use Cake\I18n\FrozenTime;


class ProjetController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->Auth->allow(['index']);
        $user = $this->Auth->user();
        if($user){
            $user['confirmed_at'] = new FrozenTime($user['confirmed_at']);
            $user['reset_at'] = new FrozenTime($user['reset_at']);
            $this->set('user', $user);
        }else{
            $this->redirect(['controller' => 'Users','action' => 'logout']);
        }

    }

    public function index(){
        $projetsTable = TableRegistry::get('Projets');
        $projets = $projetsTable->find()->all();
        $this->set('projets', $projets);
        return $this->render('index', 'Admin/default');
    }

    public function projet(){
        $projetsTable = TableRegistry::get('Projets');
        if(isset($this->request->params['?']['projet'])){
            $id = (int)$this->request->params['?']['projet'];
            $projet_edit = $projetsTable->get($id);
            if (!$projet_edit) {
                $this->Flash->error('Ce projet n\'exite pas');
                $this->redirect(['controller' => 'Users','action' => 'logout']);
            }
            $this->set('projet_edit', $projet_edit);
        }
        if ($this->request->is(array('post','put'))) {
            $projet = $projetsTable->newEntity($this->request->getData());
            if(isset($projet_edit)  && !isset($this->request->getData()['new'])){
                $projet->id = $projet_edit->id;
            }
            if ($projetsTable->save($projet)) {
                if(isset($projet_edit)  && !isset($this->request->getData()['new'])){
                    $this->Flash->success('Projet Modifié avec succès !');
                }else{
                    $this->Flash->success('Projet Ajouté avec succès !');
                }
            }else{
                $this->Flash->set('Certains champs ont été mal saisis', ['element' => 'error']);
            }
        }
        $projets = $projetsTable->find()->all();
        $this->set('projets', $projets);
        return $this->render('index', 'Admin/default');
    }

    public function delete(){
        $projetsTable = TableRegistry::get('Projets');
        if(empty($this->request->params['?']['projet'])){
            $this->Flash->error('Information manquante.');
            $this->redirect(['controller' => 'Users','action' => 'logout']);
        }else{
            if(isset($this->request->params['?']['projet'])){
                $id = (int)$this->request->params['?']['projet'];
                $projet = $projetsTable->find()
                    ->where(
                        [
                            'id' => $id,
                        ]
                    )
                    ->all();
                if (!$projet->first()) {
                    $this->Flash->error('Ce Projet n\'existe pas.');
                    $this->redirect(['controller' => 'Users', 'action' => 'logout']);
                }else{
                    $projetsTable->delete($projet->first());
                    $this->Flash->set('Projet supprimé avec succès.', ['element' => 'success']);
                    $this->redirect(['controller' => 'Calendrier','action' => 'index']);
                }
            }
        }

    }
}
